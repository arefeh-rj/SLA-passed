services:
  db:
    image: postgres:16
    container_name: pg-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-notifier}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-notifier_pw}
      POSTGRES_DB: ${POSTGRES_DB:-notifier_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-notifier} -d ${POSTGRES_DB:-notifier_db}"]
      interval: 5s
      timeout: 3s
      retries: 10

  pgadmin:  # <-- service name (use this in commands)
    image: dpage/pgadmin4:8
    container_name: pg-admin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_pw}
    ports:
      - "${PGADMIN_PORT:-8081}:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

    
  # redis:
  #   image: redis:latest
  #   command: redis-server --requirepass redis_pw
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data  

volumes:
  pg_data:
  pgadmin_data:
  # redis_data:




networks:
  mybridge:
    driver: bridge